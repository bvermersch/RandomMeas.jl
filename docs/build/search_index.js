var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = RandomMeas","category":"page"},{"location":"#RandomMeas","page":"Home","title":"RandomMeas","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for RandomMeas.jl: The randomized measurements toolbox in julia","category":"page"},{"location":"","page":"Home","title":"Home","text":"Depth = 2:3","category":"page"},{"location":"#Acquisition-routines","page":"Home","title":"Acquisition routines","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Modules = [RandomMeas]\nPages = [\"Acquisition.jl\"]","category":"page"},{"location":"#RandomMeas.get_Born-Tuple{ITensors.ITensorMPS.MPS}","page":"Home","title":"RandomMeas.get_Born","text":"get_Born(ψ::MPS)\n\nConstruct Born Probability vector P(s)=|ψ(s)|^2 from an MPS representation ψ \n\n\n\n\n\n","category":"method"},{"location":"#RandomMeas.get_Born_MPS-Tuple{ITensors.ITensorMPS.MPO}","page":"Home","title":"RandomMeas.get_Born_MPS","text":"get_Born_MPS(ρ::MPO)\n\nConstruct Born Probability vector P(s)=<s|ρ|s> as an MPS from an MPO representation ρ \n\n\n\n\n\n","category":"method"},{"location":"#RandomMeas.get_Born_MPS-Tuple{ITensors.ITensorMPS.MPS}","page":"Home","title":"RandomMeas.get_Born_MPS","text":"get_Born_MPS(ψ::MPS)\n\nConstruct Born Probability vector P(s)=|ψ(s)|^2 as an MPS from an MPS representation ψ \n\n\n\n\n\n","category":"method"},{"location":"#RandomMeas.get_RandomMeas-Tuple{Union{ITensors.ITensorMPS.MPO, ITensors.ITensorMPS.MPS}, Vector{ITensors.ITensor}, Int64}","page":"Home","title":"RandomMeas.get_RandomMeas","text":"get_RandomMeas(ρ::Union{MPO,MPS}, u::Vector{ITensor})\n\nSample randomized measurements from a MPS/MPO representation ρ \n\n\n\n\n\n","category":"method"},{"location":"#RandomMeas.get_RandomMeas_MPO-Tuple{ITensors.ITensorMPS.MPO, Vector{ITensors.ITensor}, Int64}","page":"Home","title":"RandomMeas.get_RandomMeas_MPO","text":"get_RandomMeas_MPO\n\nSample randomized measurements from an MPO representation ρ. The sampling is based from the MPO directly, i.e is memory-efficient \n\n\n\n\n\n","category":"method"},{"location":"#RandomMeas.get_RandomMeas_MPS-Tuple{ITensors.ITensorMPS.MPS, Vector{ITensors.ITensor}, Int64}","page":"Home","title":"RandomMeas.get_RandomMeas_MPS","text":"get_RandomMeas_MPS(ψ::MPS, u::Vector{ITensor},NM::Int64)\n\nSample randomized measurements from an MPS representation ψ. The sampling is based from the MPS directly, i.e is memory-efficient \n\n\n\n\n\n","category":"method"},{"location":"#RandomMeas.get_Samples_Flat-Tuple{Union{ITensors.ITensorMPS.MPO, ITensors.ITensorMPS.MPS}, Int64}","page":"Home","title":"RandomMeas.get_Samples_Flat","text":"get_Samples_Flat(state::Union{MPO,MPS},NM::Int64)\n\nSample randomized measurements from a MPS/MPO representation ρ \n\n\n\n\n\n","category":"method"},{"location":"#RandomMeas.get_rotation-Tuple{ITensors.Index{Int64}, Int64}","page":"Home","title":"RandomMeas.get_rotation","text":"get_rotation(ξ::Index{Int64}, cat::Int)\n\nGenerate a single qubit unitary with indices (ξ',ξ) Categories specified by  cat:     #1: Haar     #2: Pauli     #6: Identity matrix\n\n\n\n\n\n","category":"method"},{"location":"#RandomMeas.get_rotations","page":"Home","title":"RandomMeas.get_rotations","text":"get_rotations!\n\nGenerate a list of N single qubit unitaries to be applied on each qubit\n\n\n\n\n\n","category":"function"},{"location":"#Postprocessing-routines","page":"Home","title":"Postprocessing routines","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Modules = [RandomMeas]\nPages = [\"Postprocessing.jl\"]","category":"page"},{"location":"#RandomMeas.get_Born-Tuple{Array{Int8}, Vector{ITensors.Index{Int64}}}","page":"Home","title":"RandomMeas.get_Born","text":"get_Born(data::Array{Int8},ξ::Vector{Index{Int64}})\n\nConstruct histogram from randomized measurements as an ITensor representing the estimated Born probability\n\n\n\n\n\n","category":"method"},{"location":"#RandomMeas.get_overlap-Tuple{ITensors.ITensor, ITensors.ITensor, Vector{ITensors.Index{Int64}}, Int64}","page":"Home","title":"RandomMeas.get_overlap","text":"get_overlap(prob1::ITensor,prob2::ITensor,ξ::Vector{Index{Int64}},N::Int64)\n\nExtract an overlap estimation mathrmtr(rho_1rho_2) from two estimated Born probabilities [See Elben et al 2019: Cross Platform verification of intermediate scale quantum devices]\n\n\n\n\n\n","category":"method"},{"location":"#RandomMeas.get_purity_hamming-Tuple{Array{Int8}, Vector{ITensors.Index{Int64}}}","page":"Home","title":"RandomMeas.get_purity_hamming","text":"get_purity_hamming(data::Array{Int8},ξ::Vector{Index{Int64}})\n\nExtract the purity from the Hamming distance formula purity = sum_s (-2)^-DssP(s)P(s) [Brydges et al, Science 2019]\n\n\n\n\n\n","category":"method"},{"location":"#RandomMeas.get_purity_shadows-Tuple{Array{Int8}, Vector{Vector{ITensors.ITensor}}, Vector{ITensors.Index{Int64}}}","page":"Home","title":"RandomMeas.get_purity_shadows","text":"get_purity_shadows(data::Array{Int8},ξ::Vector{Index{Int64}})\n\nExtract the purity from classical shadows\n\n\n\n\n\n","category":"method"},{"location":"#Postprocessing-routines-for-classical-shadows","page":"Home","title":"Postprocessing routines for classical shadows","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Modules = [RandomMeas]\nPages = [\"Shadows.jl\"]","category":"page"},{"location":"#RandomMeas.get_batch_shadows-Tuple{Array{Int8}, Vector{ITensors.Index{Int64}}, Vector{Vector{ITensors.ITensor}}, Int64}","page":"Home","title":"RandomMeas.get_batch_shadows","text":"get_batch_shadows(data::Array{Int8}, ξ::Vector{Index{Int64}}, u::Vector{Vector{ITensor}}, n::Int64)\n\nConstructs n batch shadows from measured data\n\n\n\n\n\n","category":"method"},{"location":"#RandomMeas.get_expect_shadow-Tuple{ITensors.ITensorMPS.MPO, ITensors.ITensor, Vector{ITensors.Index{Int64}}}","page":"Home","title":"RandomMeas.get_expect_shadow","text":"get_expect_shadow(O, shadow, ξ::Vector{Index{Int64}})\n\nContract shadow with operator O to estimate the expectation value mathrmtr(Orho)\n\n\n\n\n\n","category":"method"},{"location":"#RandomMeas.get_moments-Tuple{Vector{ITensors.ITensor}, Vector{ITensors.Index{Int64}}, Int64}","page":"Home","title":"RandomMeas.get_moments","text":"get_moments(shadow::Vector{ITensor}, ξ::Vector{Index{Int64}})\n\nObtain trace moments from  a vector of (batch) shadows using U-statistics\n\n\n\n\n\n","category":"method"},{"location":"#RandomMeas.get_shadow-Tuple{ITensors.ITensor, Vector{ITensors.Index{Int64}}, Vector{ITensors.ITensor}}","page":"Home","title":"RandomMeas.get_shadow","text":"get_shadow(P::ITensor, ξ::Vector{Index{Int64}}, u::Vector{ITensor};G::Union{Vector{Float64},Nothing}=nothing)\n\nForm shadow from Born probability represented as an ITensor\n\n\n\n\n\n","category":"method"},{"location":"#RandomMeas.get_shadow_factorized-Tuple{Array{Int8}, Vector{ITensors.Index{Int64}}, Vector{ITensors.ITensor}}","page":"Home","title":"RandomMeas.get_shadow_factorized","text":"get_shadow_factorized(data::Array{Int8}, s::Vector{Index{Int64}}, u::Vector{};G_vec::Union{Nothing,Vector{Float64}}=nothing)\n\nbuild shadow as a tensor-product (memory-efficient)\n\n\n\n\n\n","category":"method"},{"location":"#RandomMeas.multiply-Tuple{ITensors.ITensor, ITensors.ITensor}","page":"Home","title":"RandomMeas.multiply","text":"multiply(shadow::ITensor, shadow2::ITensor)\n\n\n\n\n\n","category":"method"},{"location":"#RandomMeas.power-Tuple{ITensors.ITensor, Int64}","page":"Home","title":"RandomMeas.power","text":"power(shadow::ITensor, n::Int64)\n\n\n\n\n\n","category":"method"},{"location":"#RandomMeas.square-Tuple{ITensors.ITensor}","page":"Home","title":"RandomMeas.square","text":"square(shadow::ITensor)\n\n\n\n\n\n","category":"method"},{"location":"#RandomMeas.trace-Tuple{ITensors.ITensor, Vector{ITensors.Index{Int64}}}","page":"Home","title":"RandomMeas.trace","text":"trace(shadow::ITensor, ξ::Vector{Index{Int64}})\n\n\n\n\n\n","category":"method"},{"location":"#Additional-useful-routines-for-ITensor","page":"Home","title":"Additional useful routines for ITensor","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Modules = [RandomMeas]\nPages = [\"utils_ITensor.jl\"]","category":"page"},{"location":"#RandomMeas.flatten-Tuple{Union{ITensors.ITensorMPS.MPO, ITensors.ITensorMPS.MPS, Vector{ITensors.ITensor}}}","page":"Home","title":"RandomMeas.flatten","text":"flatten(O::Union{MPS,MPO,Vector{ITensor}})\n\nconvert a MPS/MPO to ITensor by a brutal multiplication A[1] x A[2] x ...\n\n\n\n\n\n","category":"method"},{"location":"#RandomMeas.get_entropy-Tuple{ITensors.ITensor}","page":"Home","title":"RandomMeas.get_entropy","text":"get_entropy(spec::ITensor)\n\ncompute von Neumann entropy from entanglement spectrum\n\n\n\n\n\n","category":"method"},{"location":"#RandomMeas.get_moment-Tuple{ITensors.ITensor, Int64}","page":"Home","title":"RandomMeas.get_moment","text":"get_moment(spec::ITensor,n::Int)\n\ncompute the moments ``\\mathrm{tr}(\\rho)'' from the entanglement spectrum\n\n\n\n\n\n","category":"method"},{"location":"#RandomMeas.get_purity-Tuple{ITensors.ITensorMPS.MPO, Vector{Int64}, Vector{ITensors.Index{Int64}}}","page":"Home","title":"RandomMeas.get_purity","text":"get_purity(ρ::MPO,part::Vector{Int64},ξ::Vector{Index{Int64}})\n\nCompute the purity over the sites of part\n\n\n\n\n\n","category":"method"},{"location":"#RandomMeas.get_purity-Tuple{ITensors.ITensorMPS.MPO}","page":"Home","title":"RandomMeas.get_purity","text":"get_purity(ρ::MPO)\n\ncompute the purity of an MPO\n\n\n\n\n\n","category":"method"},{"location":"#RandomMeas.get_purity-Tuple{ITensors.ITensorMPS.MPS, Int64, Int64}","page":"Home","title":"RandomMeas.get_purity","text":"get_purity(ψ::MPS,i::Int64,j::Int64)\n\ncompute the purity over sites i:j\n\n\n\n\n\n","category":"method"},{"location":"#RandomMeas.get_purity-Tuple{ITensors.ITensorMPS.MPS, Int64}","page":"Home","title":"RandomMeas.get_purity","text":"get_purity(ψ::MPS,NA::Int64)\n\ncompute the purity of an MPS over the first NA sites\n\n\n\n\n\n","category":"method"},{"location":"#RandomMeas.get_spectrum-Tuple{ITensors.ITensorMPS.MPS, Int64}","page":"Home","title":"RandomMeas.get_spectrum","text":"get_spectrum(ψ::MPS,NA::Int64)\nCompute entanglement spectrum of the first NA sites density matrix\n\n\n\n\n\n","category":"method"},{"location":"#RandomMeas.reduce_dm-Tuple{ITensors.ITensorMPS.MPO, Int64, Int64}","page":"Home","title":"RandomMeas.reduce_dm","text":"reduce_dm(ρ::MPO,i::Int64,j::Int64)\n\ncompute the reduced density matrix for sites i:j\n\n\n\n\n\n","category":"method"},{"location":"#RandomMeas.reduce_dm-Tuple{ITensors.ITensorMPS.MPO, Vector{Int64}}","page":"Home","title":"RandomMeas.reduce_dm","text":"reduce_dm(ρ::MPO,part::Vector{Int64})\n\ncompute the reduce density matrix over sites mentionned in part\n\n\n\n\n\n","category":"method"},{"location":"#RandomMeas.reduce_dm-Tuple{ITensors.ITensorMPS.MPS, Int64, Int64}","page":"Home","title":"RandomMeas.reduce_dm","text":"reduce_dm(ψ::MPS,i::Int64,j::Int64)\n\ncompute the reduced density matrix for sites i:j\n\n\n\n\n\n","category":"method"},{"location":"#RandomMeas.trace-Tuple{ITensors.ITensorMPS.MPO, Vector{ITensors.Index{Int64}}}","page":"Home","title":"RandomMeas.trace","text":"trace(ρ::MPO,s::Vector{Index{Int64}})\n\n\n\n\n\n","category":"method"}]
}
