# Include the MeasurementData and MeasurementSettings files
include("MeasurementSettings.jl")
include("MeasurementData.jl")

# Import NPZ for file operations
using NPZ

# 1. Test MeasurementSettings
println("## Testing MeasurementSettings")

# Define test unitaries
N, NU = 4, 3
unitaries = [rand(ComplexF64, 2, 2) for _ in 1:NU, __ in 1:N]

# Save unitaries to an npy file
npzwrite("unitaries.npy", unitaries)

# Test importing unitaries
measurement_settings = import_unitaries("unitaries.npy")
println("Imported MeasurementSettings: ", measurement_settings)

# 2. Test MeasurementData
println("## Testing MeasurementData")

# Define test results
NM = 10
results = rand(Bool, NU, NM, N)

# Save results to an npy file
npzwrite("results.npy", results)

# Import both results and unitaries
measurement_data = import_measurement_data("results.npy", unitaries_path="unitaries.npy")
println("MeasurementData with imported settings: ", measurement_data)

# Import results only with pre-loaded settings
measurement_data_preloaded = import_measurement_results("results.npy", measurement_settings=measurement_settings)
println("MeasurementData with preloaded settings: ", measurement_data_preloaded)

# Import results without any settings
measurement_data_no_settings = import_measurement_results("results.npy")
println("MeasurementData without settings: ", measurement_data_no_settings)
